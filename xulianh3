import numpy as np
import cv2
import pickle
%matplotlib inline
from matplotlib import pyplot as plt 
import cv2
import tkinter as tk
from tkinter import filedialog
from tkinter import *
from PIL import ImageTk, Image
import numpy
pickle_in=open("/content/drive/My Drive/Python/model_trained.p","rb")  ## rb = READ BYTE
model=pickle.load(pickle_in)
classes = { 1:'Speed limit (20km/h)',
            2:'Speed limit (30km/h)', 
            3:'Speed limit (50km/h)', 
            4:'Speed limit (60km/h)', 
            5:'Speed limit (70km/h)', 
            6:'Speed limit (80km/h)', 
            7:'End of speed limit (80km/h)', 
            8:'Speed limit (100km/h)', 
            9:'Speed limit (120km/h)', 
            10:'No passing', 
            11:'No passing veh over 3.5 tons', 
            12:'Right-of-way at intersection', 
            13:'Priority road', 
            14:'Yield', 
            15:'Stop', 
            16:'No vehicles', 
            17:'Veh > 3.5 tons prohibited', 
            18:'No entry', 
            19:'General caution', 
            20:'Dangerous curve left', 
            21:'Dangerous curve right', 
            22:'Double curve', 
            23:'Bumpy road', 
            24:'Slippery road', 
            25:'Road narrows on the right', 
            26:'Road work', 
            27:'Traffic signals', 
            28:'Pedestrians', 
            29:'Children crossing', 
            30:'Bicycles crossing', 
            31:'Beware of ice/snow',
            32:'Wild animals crossing', 
            33:'End speed + passing limits', 
            34:'Turn right ahead', 
            35:'Turn left ahead', 
            36:'Ahead only', 
            37:'Go straight or right', 
            38:'Go straight or left', 
            39:'Keep right', 
            40:'Keep left', 
            41:'Roundabout mandatory', 
            42:'End of no passing', 
            43:'End no passing veh > 3.5 tons' }
image=subimg
imgresult=img
image = np.array(image)
image = cv2.resize(image, (32, 32))
image = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
#can bang sang
image =cv2.equalizeHist(image)
image = image/255
image = image.reshape(1, 32, 32, 1)
pred= model.predict_classes(image)[0]
sign = classes[pred+1]
print(sign)
img = cv2.putText(img, sign, (vitrix,vitriy), cv2.FONT_HERSHEY_SIMPLEX,2, (0,0,255), 2, cv2.LINE_AA) 
imagergb=cv2.cvtColor(imgresult, cv2.COLOR_BGR2RGB)
#khong dung dc cv2.imread nen dung plt
plt.imshow(imagergb)
plt.show
